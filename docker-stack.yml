version: "3.3"

volumes:
  keskne-certs:
  keskne-postgres:
  rps-static:
  laulud-static:

secrets:
  # revproxy container
  keskne_revproxy_amplify_api_key:
    external: true

  # postgres-backup container
  keskne_postgres_password:
    external: true
  keskne_cloud_storage_bucket:
    external: true
  keskne_cloud_storage_key:
    external: true

  # rps-api container
  keskne_rps_db_password:
    external: true
  keskne_rps_secret_key:
    external: true

  # laulud-api container
  keskne_laulud_spotify_client_id:
    external: true
  keskne_laulud_spotify_client_secret:
    external: true
  keskne_laulud_secret_key:
    external: true

services:
  # ===== Keskne =====
  revproxy:
    image: gcr.io/keskne-283621/keskne-revproxy:${KESKNE_IMAGE_TAG}
    depends_on:
      - rps-api
      - laulud-api
    # Need mode:host so the client IP gets logged properly
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    environment:
      - ROOT_HOSTNAME=${ROOT_HOSTNAME}
      - RPS_HOSTNAME=${RPS_HOSTNAME}
      - LAULUD_HOSTNAME=${LAULUD_HOSTNAME}
      - AMPLIFY_API_KEY_FILE=/run/secrets/keskne_revproxy_amplify_api_key
    secrets:
      - keskne_revproxy_amplify_api_key
    volumes:
      - ${KESKNE_LOGS_DIR}/revproxy:/var/log/nginx:rw
      - keskne-certs:/app/certs:ro
      - rps-static:/app/rps:ro
      - laulud-static:/app/laulud:ro
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  postgres:
    image: gcr.io/keskne-283621/keskne-postgres:${KESKNE_IMAGE_TAG}
    environment:
      - POSTGRES_USER=root
      - RPS_DB=rps
    secrets:
      - keskne_postgres_password
      - keskne_rps_db_password
    volumes:
      - keskne-postgres:/var/lib/postgresql/data:rw
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  postgres-backup:
    image: gcr.io/keskne-283621/keskne-postgres-backup-google:${KESKNE_IMAGE_TAG}
    environment:
      BACKUP_CRON_SCHEDULE: 0 0 * * * # Daily backups
      DATABASES: rps
      POSTGRES_HOST: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD_FILE: /run/secrets/keskne_postgres_password
      CLOUD_STORAGE_BUCKET_FILE: /run/secrets/keskne_cloud_storage_bucket
      CLOUD_STORAGE_KEY_FILE: /run/secrets/keskne_cloud_storage_key
    secrets:
      - keskne_postgres_password
      - keskne_cloud_storage_bucket
      - keskne_cloud_storage_key
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  # ===== RPS =====
  rps-redis:
    image: redis:5-alpine
    deploy:
      restart_policy:
        condition: any

  rps-api:
    image: lucaspickering/rps-api:latest
    environment:
      - RPS_HOSTNAME=${RPS_HOSTNAME}
      - RPS_LOGGING_DIR=/var/log/rps
      - RPS_REDIS_HOST=rps-redis:6379
      - RPS_DB_HOST=postgres
      - RPS_DB_NAME=rps
      - RPS_DB_USER=rps
    depends_on:
      - postgres
      - rps-redis
    secrets:
      - keskne_rps_db_password
      - keskne_rps_secret_key
    volumes:
      - ${KESKNE_LOGS_DIR}/rps:/var/log/rps:rw
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  rps-static:
    image: lucaspickering/rps-static:latest
    volumes:
      - rps-static:/app/rps:rw
    # We have to do this to make sure changes in the image get picked up
    command: sh -c "rm -rf /app/rps/* && cp -r /app/static/* /app/rps"
    deploy:
      restart_policy:
        condition: none

  # ===== Laulud =====
  laulud-db:
    image: mongo:4.4

  laulud-api:
    image: gcr.io/laulud-298918/laulud-api:latest
    environment:
      RUST_BACKTRACE: 1
      RUST_LOG: info
      ROCKET_HOSTNAME: https://laulud.lucaspickering.me
      ROCKET_DATABASE_URL: mongodb://laulud-db:27017/?appname=laulud
    command: /app/laulud-api
    depends_on:
      - laulud-db
    secrets:
      - keskne_laulud_spotify_client_id
      - keskne_laulud_spotify_client_secret
      - keskne_laulud_secret_key
    volumes:
      - ${KESKNE_LOGS_DIR}/laulud:/var/log/laulud:rw
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  laulud-static:
    image: gcr.io/laulud-298918/laulud-static:latest
    volumes:
      - laulud-static:/app/laulud:rw
    # We have to do this to make sure changes in the image get picked up
    command: sh -c "rm -rf /app/laulud/* && cp -r /app/static/* /app/laulud"
    deploy:
      restart_policy:
        condition: none
