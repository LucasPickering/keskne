version: "3.3"

volumes:
  lpme-static:
  mbta-static:
  rps-static:

secrets:
  keskne_revproxy_amplify_api_key:
    external: true
  keskne_s3_access_key:
    external: true
  keskne_s3_secret_key:
    external: true
  keskne_mbta_db_password:
    external: true
  keskne_mbta_secret_key:
    external: true
  keskne_rps_db_password:
    external: true
  keskne_rps_secret_key:
    external: true
  keskne_rps_email_username:
    external: true
  keskne_rps_email_password:
    external: true

services:
  # ===== Keskne =====
  revproxy:
    image: lucaspickering/keskne-revproxy:latest
    depends_on:
      - mbta-api
      - rps-api
    # Need mode:host so the client IP gets logged properly
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    environment:
      - AMPLIFY_IMAGENAME=lucaspickering.me
    secrets:
      - keskne_revproxy_amplify_api_key
    volumes:
      - /etc/letsencrypt:/app/certs:ro
      - /var/log/keskne/revproxy:/var/log/nginx:rw
      - lpme-static:/app/lpme:ro
      - mbta-static:/app/mbta:ro
      - rps-static:/app/rps:ro
    deploy:
      restart_policy:
        condition: any

  postgres:
    image: lucaspickering/keskne-postgres:latest
    environment:
      - S3_BUCKET=quilava
      - POSTGRES_USER=root
      - MBTA_DB=mbta
      - RPS_DB=rps
    secrets:
      - keskne_s3_access_key
      - keskne_s3_secret_key
      - keskne_mbta_db_password
      - keskne_rps_db_password
    volumes:
      - /var/keskne/postgres:/var/lib/postgresql/data:rw
    deploy:
      restart_policy:
        condition: any

  # ===== Main site =====
  lpme:
    image: lucaspickering/lucaspickering.me-static
    volumes:
      - lpme-static:/app/lpme:rw
    # We have to do this to make sure changes in the image get picked up
    command: sh -c "rm -rf /app/lpme/* && cp -r /app/static/* /app/lpme"
    deploy:
      restart_policy:
        condition: none

  # ===== Wordpress =====
  # wordpress-db:
  #   image: mysql:5
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: wordpress
  #   volumes:
  #     - /var/keskne/wordpress-db:/var/lib/mysql
  #   deploy:
  #     restart_policy:
  #       condition: any

  # wordpress:
  #   image: wordpress:latest
  #   depends_on:
  #     - wordpress-db
  #   environment:
  #     WORDPRESS_DB_HOST: wordpress-db:3306
  #     WORDPRESS_DB_NAME: wordpress
  #     WORDPRESS_DB_USER: root
  #     WORDPRESS_DB_PASSWORD: root
  #   volumes:
  #     - /var/keskne/wordpress:/var/www/html:rw
  #   deploy:
  #     restart_policy:
  #       condition: any

  # ===== MBTA =====
  # WARNING: Django rejects all requests if your hostname has an underscore!
  mbta-api:
    image: lucaspickering/mbta-api:latest
    environment:
      - MBTA_DB_HOST=postgres
      - MBTA_DB_NAME=mbta
      - MBTA_DB_USER=mbta
    depends_on:
      - postgres
    secrets:
      - keskne_mbta_db_password
      - keskne_mbta_secret_key
    volumes:
      - /var/log/keskne/mbta:/var/log/gunicorn:rw
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  mbta-static:
    image: lucaspickering/mbta-static:latest
    volumes:
      - mbta-static:/app/mbta:rw
    # We have to do this to make sure changes in the image get picked up
    command: sh -c "rm -rf /app/mbta/* && cp -r /app/static/* /app/mbta"
    deploy:
      restart_policy:
        condition: none

  # ===== RPS =====
  rps-redis:
    image: redis:5-alpine
    deploy:
      restart_policy:
        condition: any

  rps-api:
    image: lucaspickering/rps-api:latest
    environment:
      - RPS_HOSTNAME=rps.lucaspickering.me
      - RPS_LOGGING_DIR=/var/log/rps
      - RPS_REDIS_HOST=rps-redis:6379
      - RPS_DB_HOST=postgres
      - RPS_DB_NAME=rps
      - RPS_DB_USER=rps
    depends_on:
      - postgres
      - rps-redis
    secrets:
      - keskne_rps_db_password
      - keskne_rps_secret_key
      - keskne_rps_email_username
      - keskne_rps_email_password
    volumes:
      - /var/log/keskne/rps:/var/log/rps:rw
    deploy:
      restart_policy:
        condition: any
        delay: 10s

  rps-static:
    image: lucaspickering/rps-static:latest
    volumes:
      - rps-static:/app/rps:rw
    # We have to do this to make sure changes in the image get picked up
    command: sh -c "rm -rf /app/rps/* && cp -r /app/static/* /app/rps"
    deploy:
      restart_policy:
        condition: none
